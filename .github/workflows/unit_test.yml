name: build and test

on:
  push:
  pull_request:
    branches: [ master ]
    paths:
    - '**.cs'
    - '**.csproj'

env:
  DOTNET_VERSION: '7.0.x' # The .NET SDK version to use

jobs:
  build-and-test:

    name: build-and-test-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Install dependencies on ubuntu
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: dotnet restore ./test/CICD_TestProject/CICD_TestProject.csproj

    - name: Install dependencies on windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: dotnet restore test\CICD_TestProject\CICD_TestProject.csproj

    - name: Build on ubuntu
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: dotnet build ./test/CICD_TestProject/CICD_TestProject.csproj --configuration Release --no-restore
    
    - name: Build on windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: dotnet build test\CICD_TestProject\CICD_TestProject.csproj --configuration Release --no-restore
    
    - name: Test on ubuntu
      if: matrix.os == 'ubuntu-latest'
      shell: bash
      run: dotnet test ./test/CICD_TestProject/CICD_TestProject.csproj --no-restore --verbosity normal
    
    - name: Test on windows
      if: matrix.os == 'windows-latest'
      shell: pwsh
      run: dotnet test test\CICD_TestProject\CICD_TestProject.csproj --no-restore --verbosity normal