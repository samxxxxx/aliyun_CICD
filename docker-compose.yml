#version: '3.8' # Docker Compose 文件的版本

#services:
#  aliyuncicdservice: # 服务名称，可以根据需要进行更改
#    build:
#      context: . # Dockerfile 的路径，'.' 表示当前目录
#      dockerfile: Dockerfile # Dockerfile 的文件名，如果文件名是 Dockerfile 则可以省略
#    ports:
#      - "9084:80" # 将容器的 80 端口映射到主机的 8080 端口，可以根据需要更改
    #environment:
    #  - ASPNETCORE_ENVIRONMENT=Development # 设置环境变量，可以根据需要添加更多

# 如果有多个服务，可以在这里定义


# version: '3.8'

services:
  webapp:
    #image: WebApplication1:latest
    build:
      context: .
      dockerfile: Dockerfile
    image: aliyun_cicd/webapp:latest
    ports:
      - "9084:80"
    restart: always

    # 这里的volumes 映射的目录是宿主机的，挂载卷的选择：如果在开发环境中使用挂载卷，可以保留 volumes 指令。如果在生产环境中，可以去掉挂载卷，以避免覆盖容器内的文件。
    #volumes:
    #  - ./app:/app
    working_dir: /app
    command: ["dotnet", "WebApplication1.dll"]
